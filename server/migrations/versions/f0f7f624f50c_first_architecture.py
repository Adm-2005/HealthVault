"""first architecture

Revision ID: f0f7f624f50c
Revises: 
Create Date: 2024-10-05 23:58:41.596285

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f0f7f624f50c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('role', sa.Enum('DOCTOR', 'PATIENT', name='userrole'), nullable=False),
    sa.Column('password_hash', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('doctors',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('license_number', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_doctors_license_number'), ['license_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_doctors_user_id'), ['user_id'], unique=True)

    op.create_table('patients',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('health_records',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doc_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('file_type', sa.String(length=10), nullable=False),
    sa.Column('file_url', sa.String(length=255), nullable=False),
    sa.Column('qrcode_url', sa.String(length=255), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['doctors.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_url')
    )
    with op.batch_alter_table('health_records', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_health_records_doc_id'), ['doc_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_health_records_patient_id'), ['patient_id'], unique=False)

    op.create_table('access_control',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doc_id', sa.Integer(), nullable=False),
    sa.Column('hr_id', sa.Integer(), nullable=False),
    sa.Column('access_granted', sa.Boolean(), nullable=False),
    sa.Column('access_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doc_id'], ['doctors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hr_id'], ['health_records.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_control', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_control_doc_id'), ['doc_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_control_hr_id'), ['hr_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_control_patient_id'), ['patient_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('access_control', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_control_patient_id'))
        batch_op.drop_index(batch_op.f('ix_access_control_hr_id'))
        batch_op.drop_index(batch_op.f('ix_access_control_doc_id'))

    op.drop_table('access_control')
    with op.batch_alter_table('health_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_health_records_patient_id'))
        batch_op.drop_index(batch_op.f('ix_health_records_doc_id'))

    op.drop_table('health_records')
    op.drop_table('patients')
    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_doctors_user_id'))
        batch_op.drop_index(batch_op.f('ix_doctors_license_number'))

    op.drop_table('doctors')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
