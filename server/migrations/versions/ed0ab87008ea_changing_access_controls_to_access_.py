"""changing access_controls to access_packages

Revision ID: ed0ab87008ea
Revises: 41e9f62a3e15
Create Date: 2024-12-09 15:31:07.875588

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ed0ab87008ea'
down_revision = '41e9f62a3e15'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access_package',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('access_type', sa.String(length=7), nullable=False),
    sa.Column('doc_id', sa.Integer(), nullable=True),
    sa.Column('rec_patient_id', sa.Integer(), nullable=True),
    sa.Column('qrcode_url', sa.String(length=255), nullable=True),
    sa.Column('access_granted', sa.Boolean(), nullable=False),
    sa.Column('access_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doc_id'], ['doctors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rec_patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('access_package', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_access_package_doc_id'), ['doc_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_package_patient_id'), ['patient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_access_package_rec_patient_id'), ['rec_patient_id'], unique=False)

    op.create_table('health_records_access_packages',
    sa.Column('hr_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('ac_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ac_id'], ['access_package.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hr_id'], ['health_records.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('hr_id', 'ac_id')
    )
    op.drop_table('health_record_access_control')
    with op.batch_alter_table('access_control', schema=None) as batch_op:
        batch_op.drop_index('ix_access_control_doc_id')
        batch_op.drop_index('ix_access_control_patient_id')
        batch_op.drop_index('ix_access_control_rec_patient_id')

    op.drop_table('access_control')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access_control',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('doc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('access_granted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('access_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('qrcode_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_type', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('rec_patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['doctors.id'], name='access_control_doc_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='access_control_patient_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rec_patient_id'], ['patients.id'], name='access_control_rec_patient_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='access_control_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('access_control', schema=None) as batch_op:
        batch_op.create_index('ix_access_control_rec_patient_id', ['rec_patient_id'], unique=False)
        batch_op.create_index('ix_access_control_patient_id', ['patient_id'], unique=False)
        batch_op.create_index('ix_access_control_doc_id', ['doc_id'], unique=False)

    op.create_table('health_record_access_control',
    sa.Column('hr_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('ac_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('granted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ac_id'], ['access_control.id'], name='health_record_access_control_ac_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hr_id'], ['health_records.id'], name='health_record_access_control_hr_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('hr_id', 'ac_id', name='health_record_access_control_pkey')
    )
    op.drop_table('health_records_access_packages')
    with op.batch_alter_table('access_package', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_access_package_rec_patient_id'))
        batch_op.drop_index(batch_op.f('ix_access_package_patient_id'))
        batch_op.drop_index(batch_op.f('ix_access_package_doc_id'))

    op.drop_table('access_package')
    # ### end Alembic commands ###
